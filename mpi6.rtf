{\rtf1\ansi\ansicpg1251\cocoartf2580
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Bold;\f1\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red46\green174\blue187;\red159\green160\blue28;\red0\green0\blue0;
\red47\green180\blue29;\red180\green36\blue25;\red255\green255\blue255;\red200\green20\blue201;}
{\*\expandedcolortbl;;\cssrgb\c20196\c73240\c78250;\cssrgb\c68468\c68012\c14208;\csgray\c0;
\cssrgb\c20238\c73898\c14947;\cssrgb\c76409\c21698\c12524;\csgray\c100000;\cssrgb\c83396\c23075\c82664;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\b\fs22 \cf2 \CocoaLigature0 #include\cf3  <iostream>
\f1\b0 \cf4 \

\f0\b \cf2 #include\cf3  <mpi.h>
\f1\b0 \cf4 \

\f0\b \cf2 #include\cf3  <chrono>
\f1\b0 \cf4 \

\f0\b \cf2 #include\cf3  <vector>
\f1\b0 \cf4 \

\f0\b \cf2 #include\cf3  <fstream>
\f1\b0 \cf4 \
\
\cf5 using\cf4  \cf5 namespace\cf4  std;\
\
\cf5 int\cf4  main(\cf5 int\cf4  argc, \cf5 char\cf4 * argv[]) \{\
    MPI_Init(&argc, &argv);\
\
    \cf5 int\cf4  rank, size;\
    MPI_Comm_rank(
\f0\b \cf6 MPI_COMM_WORLD
\f1\b0 \cf4 , &rank);\
    MPI_Comm_size(
\f0\b \cf6 MPI_COMM_WORLD
\f1\b0 \cf4 , &size);\
\
    \cf5 int\cf4  trials = 1000;\
    \cf5 int\cf4  max_length = 1000000;\
\
    
\f0\b \cf3 for
\f1\b0 \cf4  (\cf5 int\cf4  length = 10; length <= max_length; length *= 10) \{\
        vector<\cf5 char\cf4 > sbuf(length);\
        vector<\cf5 char\cf4 > rbuf(length);\
\
        chrono::time_point<chrono::system_clock, chrono::nanoseconds> start_time;\
\
        
\f0\b \cf3 if
\f1\b0 \cf4  (rank == 0) \{\
            start_time = chrono::high_resolution_clock::now();\
        \}\
\
        
\f0\b \cf3 for
\f1\b0 \cf4  (\cf5 int\cf4  j = 0; j < trials; ++j) \{\
            MPI_Sendrecv(sbuf.data(), length, 
\f0\b \cf6 MPI_CHAR
\f1\b0 \cf4 , (rank+1)%size , 0,rbuf.data(), length, 
\f0\b \cf6 MPI_CHAR
\f1\b0 \cf4 , (rank-1+size)%size, 0\cf7 \cb4 >\cf4 \cb1 \
        \}\
\
        
\f0\b \cf3 if
\f1\b0 \cf4  (rank == 0) \{\
            \cf5 auto\cf4  end_time = chrono::high_resolution_clock::now();\
            \cf5 auto\cf4  duration = chrono::duration_cast<chrono::microseconds>(end_time - start_time) / trials;\
\
            cout << duration.count() << 
\f0\b \cf3 ","
\f1\b0 \cf4 ;\
        \}\
    \}\
\
    MPI_Finalize();\
    \cf8 return\cf4  0;\
\}\
}